env:
  LOCAL_IMAGE_NAME: "shop-tailwind_web"
  IMAGE_NAME: "angular-image"
  VERSION: "latest"
  REGISTRY_BASE_URL: "docker.pkg.github.com"
  REGISTRY: "docker.pkg.github.com/gummiees/shop-tailwind"

on:
  push:
    branches:
      - main
    paths:
      - 'config/**'
      - 'site/**'
      - 'Dockerfile'
      - '.github/workflows/**'

jobs:
  build:
    name: Build the container, push it to GitHub Packages, deploys the image to a droplet on DigitalOcean
    runs-on: ubuntu-latest
    steps:
    - name: Checkout main
      uses: actions/checkout@v2
      
    - name: Build the docker container
      run: docker-compose up -d --build

    - name: Push the image to GitHub Packages
      run: |
        echo Tag image
        docker tag $(echo $LOCAL_IMAGE_NAME):latest $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $VERSION)
        echo Login into GitHub container
        docker login $(echo $REGISTRY_BASE_URL) -u ${{ github.repository_owner }} -p ${{ secrets.GH_TOKEN }}
        echo Push image
        docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $VERSION)
    
    - name: Deploy to Digital Ocean droplet via SSH action
      uses: appleboy/ssh-action@v0.1.3
      with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          passphrase : ${{ secrets.PASSPHRASE }}
          envs: IMAGE_NAME,REGISTRY,REGISTRY_BASE_URL,VERSION
          script: |
            ls -al
            echo test repository owner: ${{ github.repository_owner }}
            echo Stop running container
            docker stop $(echo $IMAGE_NAME)
            echo Remove old container
            docker rm -f $(echo $IMAGE_NAME)
            echo Login into GitHub Registry
            docker login $(echo $REGISTRY_BASE_URL) -u ${{ github.repository_owner }} -p ${{ secrets.GH_TOKEN }}
            echo Run a new container from the pulled image
            docker run -d --restart always -p 80:80 --name $(echo $IMAGE_NAME) $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $VERSION)
